As part of an ongoing analysis of salary distribution within the company, your manager has requested a report identifying high earners in each department. A 'high earner' within a department is defined as an employee with a salary ranking among the top three salaries within that department.
You're tasked with identifying these high earners across all departments. Write a query to display the employee's name along with their department name and salary. In case of duplicates, sort the results of department name in ascending order, then by salary in descending order. If multiple employees have the same salary, then order them alphabetically.
Note: Ensure to utilize the appropriate ranking window function to handle duplicate salaries effectively.

employee Schema:
column_name	type	description
employee_id	integer	The unique ID of the employee.
name	string	The name of the employee.
salary	integer	The salary of the employee.
department_id	integer	The department ID of the employee.
manager_id	integer	The manager ID of the employee.

==> My approach:
--Salary rankings by department
WITH ranking AS (
SELECT d.department_name
     , e.name
     , e.salary
     , DENSE_RANK() OVER(PARTITION BY e.department_id ORDER BY e.salary DESC) AS salary_rank
FROM employee AS e 
JOIN department AS d 
ON e.department_id = d.department_id 
)
--Top 3 employees by salary of each dept 
SELECT department_name
     , name 
     , salary 
FROM ranking 
WHERE salary_rank <= 3
ORDER BY department_name ASC 
       , salary DESC 
       , name ASC;
