Table: Activity
+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| player_id    | int     |
| device_id    | int     |
| event_date   | date    |
| games_played | int     |
+--------------+---------+
(player_id, event_date) is the primary key (combination of columns with unique values) of this table.
This table shows the activity of players of some games.
Each row is a record of a player who logged in and played a number of games (possibly 0) before logging out on someday using some device.
Write a solution to report the fraction of players that logged in again on the day after the day they first logged in, rounded to 2 decimal places. In other words, you need to count the number of players that logged in for at least two consecutive days starting from their first login date, then divide that number by the total number of players.
The result format is in the following example.

=> My approach:
WITH First_date_log AS (
     SELECT player_id
          , device_id
          , MIN(event_date) AS first_date
          , (SELECT COUNT(DISTINCT player_id) FROM Activity) AS total_player
     FROM Activity
     GROUP BY player_id, device_id)
    , Cons_date_log AS (
     SELECT a.player_id
          , a.device_id
          , total_player
     FROM First_date_log AS f
     JOIN Activity AS a
     ON f.player_id = a.player_id AND a.device_id = f.device_id
     WHERE DATEDIFF(day, first_date, event_date) =1)
SELECT ROUND(CAST(COUNT(player_id) AS float)/ CAST(total_player AS float), 2) AS fraction
FROM Cons_date_log
GROUP BY total_player
