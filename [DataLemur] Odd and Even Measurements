Assume you're given a table with measurement values obtained from a Google sensor over multiple days with measurements taken multiple times within each day.
Write a query to calculate the sum of odd-numbered and even-numbered measurements separately for a particular day and display the results in two different columns. Refer to the Example Output below for the desired format.
Definition:
Within a day, measurements taken at 1st, 3rd, and 5th times are considered odd-numbered measurements, and measurements taken at 2nd, 4th, and 6th times are considered even-numbered measurements.

measurements Table:
Column Name	Type
measurement_id	integer
measurement_value	decimal
measurement_time	datetime

==> My approach:
--Measurement order 
WITH measurement_number AS (
SELECT measurement_id
     , measurement_value
     , DATE_TRUNC('day', measurement_time) AS measurement_day
     , ROW_NUMBER() OVER (PARTITION BY DATE_TRUNC('day', measurement_time) ORDER BY measurement_time)
FROM measurements
ORDER BY measurement_day
)
--Sum of odd-numbered and even-numbered measurements separately 
SELECT measurement_day
     , SUM(CASE WHEN row_number % 2 = 0 THEN measurement_value END) AS even_sum
     , SUM(CASE WHEN row_number % 2 != 0 THEN measurement_value END) AS odd_sum
FROM measurement_number
GROUP BY measurement_day;
